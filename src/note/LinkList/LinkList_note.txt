Add Two Numbers 2
两个链表各自指针遍历,注意一个链表已遍历完,另一个还没结束的情况
  while (l1 != null && l2 != null)
  if (l1 != null)
  if (l2 != null)

  Copy List with Random Pointer 138
  链表复制,第一次遍历可把新建的节点继续连接到当前链表上.
  第二次遍历,复制新的random域,  iter.next.random = iter.random.next;
  第三次遍历,新建链表与原有链表分离,并还原原有链表的节点链接关系

   reverse Nodes in k-Group 25
   链表节点的指针指向问题, 设立多指针遍历pre, p, r,s,方便操作

  237. Delete Node in a Linked List
  只知道指向某个节点的指针的情况下,如何删除该节点. 与后一节点交换值,并交换指向.

147. Insertion Sort List
  链表的插入排序

LRU Cache 146
  双链表和hashMap实现LRU Cahce. hashMap 主要用来记录LRU 中的的节点,加快搜索速度.
  用到双链表的插入,删除

 Remove Linked List Elements 203
  单链表,删除一个链表中某一值的所有元素

Reorder List 143
单链表的指针重定向问题.认真观察题目规律,可将原有链表拆分成两个链表,然后两个链表再按一定次序连接成新的链表,不需要额外的空间.


Reverse Linked List 206
反转单链表

Reverse Linked List II 92
反转单链表的第m到第n之间的节点. 三指针.

148. Sort List
Sort a linked list in O(n log n) time using constant space complexity.
  单链表的快速排序算法,选取第一个节点为中轴后,拆分成比中轴值小的small链和比中轴值大的big链以及和中轴值相等的mid链.再分别对small链和big链递归用快速排序算法,最后把三个单链表连接起来,完成快速排序.注意需要用到dump node开始.

  单链表的归并排序，注意dump 头结点的运用
